name: GameCI Template üéÆ

on:
  push:
    branches:
      - build

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  checkLicense:
    name: Check for the Unity license ‚òëÔ∏è
    runs-on: ubuntu-latest
    steps:
      - name: Fail - No license ‚ò†Ô∏è
        if: ${{ !startsWith(env.UNITY_LICENSE, '<') }}
        run: exit 1

  testRunner:
    needs: checkLicense
    name: Test all modes üìù
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-test-project
          restore-keys: |
            Library-test-project-
            Library-

      - name: Updating Git submodules
        run:
          git submodule init && git submodule update

      - name: List Project Structure
        run:
          ls -al Assets/BlendedTemplate/

      - uses: webbertakken/unity-test-runner@v4
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          testMode: all

      - uses: actions/upload-artifact@v4
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}

      - name: List Project Structure after Testrunner
        run:
          ls -al Assets/BlendedTemplate/

  buildWebGL:
    needs: testRunner
    name: Build for WebGL üñ•Ô∏è
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: List Project Structure before Build
        run:
          ls -al 

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Updating Git submodules
        run:
          git submodule init && git submodule update

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-build-WebGL
          restore-keys: |
            Library-build-
            Library-

      - uses: webbertakken/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          buildName: html_basic

      # - name: List Project Structure 1
      #   run:
      #     ls -al 

      - uses: actions/upload-artifact@v4
        with:
          name: build-WebGL
          path: build/WebGL

      # - name: List Project Structure 2
      #   run:
      #     ls -al 

      # - name: Listing Build Folder
      #   run:
      #     ls -al build/WebGL/WebGL/
#  deployPages:
#    needs: buildWebGL
#    name: Deploy to Github Pages üöÄ
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - uses: actions/download-artifact@v2
#        with:
#          name: build-WebGL
#          path: build
#
#      - name: Display structure of root files
#        run: ls -R
#        working-directory: build/WebGL
#
#      - name: Deploy üöÄ
#        uses: JamesIves/github-pages-deploy-action@4.1.4
#        with:
#          branch: gh-pages
#          folder: build/WebGL
